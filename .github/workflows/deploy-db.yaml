name: Deploy Postgres on Azure

on:
    workflow_dispatch:

jobs:
    infracost:
        name: Infracost
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup Infracost
              uses: infracost/actions/setup@v2
              with:
                  api-key: ${{ secrets.INFRACOST_API_KEY }}

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2

            - name: Terraform init
              working-directory: ./terraform
              run: terraform init -input=false

            - name: Generate Infracost breakdown
              run: |
                  infracost breakdown --path=./terraform \
                                      --format=json \
                                      --out-file=/tmp/infracost.json

            - name: Post Infracost comment
              if: github.event_name == 'pull_request'
              uses: infracost/actions/comment@v2
              with:
                  file: /tmp/infracost.json
                  behavior: update

    terraform:
        name: Terraform Apply
        runs-on: ubuntu-latest
        needs: infracost
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2

            - name: Azure Login
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Terraform Init
              working-directory: ./terraform
              run: terraform init -input=false

            - name: Terraform Validate
              working-directory: ./terraform
              run: terraform validate

            - name: Terraform Plan
              working-directory: ./terraform
              run: terraform plan -input=false -out=tfplan

            - name: Terraform Apply
              working-directory: ./terraform
              run: terraform apply -auto-approve tfplan
